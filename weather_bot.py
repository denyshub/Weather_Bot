import aiogram
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor, markdown

from aiogram.dispatcher.filters import Text
from main import collectData
import json

bot = Bot(token = "6709206383:AAFJoDfj9WzuCATWAn1aT6QOiZXhsaiYeGw", parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)


ukrainian_cities = [
    "–ö–∏—ó–≤", "–õ—å–≤—ñ–≤", "–•–∞—Ä–∫—ñ–≤", "–û–¥–µ—Å–∞", "–î–Ω—ñ–ø—Ä–æ", "–ó–∞–ø–æ—Ä—ñ–∂–∂—è", "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫",
    "–¢–µ—Ä–Ω–æ–ø—ñ–ª—å", "–ß–µ—Ä–Ω—ñ–≤—Ü—ñ", "–•–µ—Ä—Å–æ–Ω", "–ü–æ–ª—Ç–∞–≤–∞", "–ñ–∏—Ç–æ–º–∏—Ä", "–í—ñ–Ω–Ω–∏—Ü—è", "–ß–µ—Ä–Ω—ñ–≥—ñ–≤",
    "–°—É–º–∏", "–†—ñ–≤–Ω–µ", "–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π", "–ö—Ä–æ–ø–∏–≤–Ω–∏—Ü—å–∫–∏–π", "–ß–µ—Ä–∫–∞—Å–∏", "–ú–∏–∫–æ–ª–∞—ó–≤", "–•—É—Å—Ç",
    "–ú—É–∫–∞—á–µ–≤–µ", "–£–∂–≥–æ—Ä–æ–¥", "–õ—É—Ü—å–∫", "–Ü–∑–º–∞—ó–ª", "–ë–µ—Ä–¥—è–Ω—Å—å–∫", "–ú–∞—Ä—ñ—É–ø–æ–ª—å", "–ö—Ä–∏–≤–∏–π –†—ñ–≥",
    "–°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å", "–°—ñ–º—Ñ–µ—Ä–æ–ø–æ–ª—å", "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫", "–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π", "–ß–µ—Ä–Ω—ñ–≤—Ü—ñ",
    "–ö—Ä–∞–º–∞—Ç–æ—Ä—Å—å–∫", "–ú–µ–ª—ñ—Ç–æ–ø–æ–ª—å", "–ñ–æ–≤–∫–≤–∞", "–ë—ñ–ª–∞ –¶–µ—Ä–∫–≤–∞", "–ù—ñ–∫–æ–ø–æ–ª—å", "–õ—É–≥–∞–Ω—Å—å–∫",
    "–õ–∏—Å–∏—á–∞–Ω—Å—å–∫", "–ê–ª—á–µ–≤—Å—å–∫", "–ï–Ω–µ—Ä–≥–æ–¥–∞—Ä", "–ú–∞—Ä–≥–∞–Ω–µ—Ü—å", "–ü–∞–≤–ª–æ–≥—Ä–∞–¥", "–Ü—Ä–ø—ñ–Ω—å", "–ë—Ä–æ–≤–∞—Ä–∏",
    "–ö—Ä–∞–º–∞—Ç–æ—Ä—Å—å–∫", "–ö—Ä–µ–º–µ–Ω—á—É–∫", "–ú—É–∫–∞—á–µ–≤–µ", "–°–ª–∞–≤—É—Ç–∞", "–°–º—ñ–ª–∞", "–°–Ω—ñ–≥—É—Ä—ñ–≤–∫–∞", "–•–æ—Ç–∏–Ω", "–ß–æ—Ä—Ç–∫—ñ–≤",
    "–®–æ—Å—Ç–∫–∞", "–Ø–º–ø—ñ–ª—å", "–Ø—Ä–µ–º—á–µ", "–ë–µ–ª–∑", "–ë–µ—Ä–µ–≥–æ–≤–æ", "–ë—ñ–ª–≥–æ—Ä–æ–¥-–î–Ω—ñ—Å—Ç—Ä–æ–≤—Å—å–∫–∏–π", "–ë—ñ–ª–æ–∑–µ—Ä—Å—å–∫–µ", "–ë–æ—è—Ä–∫–∞",
    "–ë—É—Ä—à—Ç–∏–Ω", "–í–∞—Å–∏–ª—ñ–≤–∫–∞", "–í–∞—Ç—É—Ç—ñ–Ω–µ", "–ì–∞–¥—è—á", "–ì–∞–π–≤–æ—Ä–æ–Ω", "–ì–µ–Ω–∏—á–µ—Å—å–∫", "–ì–ª–æ–±–∏–Ω–µ", "–î–µ—Ä–∞–∂–Ω—è", "–î–æ–ª–∏–Ω–∞",
    "–î—É–±–Ω–æ", "–Ñ–Ω–∞–∫—ñ—î–≤–µ", "–ñ–æ–≤—Ç—ñ –í–æ–¥–∏", "–ñ–º–µ—Ä–∏–Ω–∫–∞", "–ñ–æ–≤—Ç–Ω–µ–≤–µ", "–ó–æ–ª–æ—á—ñ–≤", "–ó–±–∞—Ä–∞–∂", "–ó–æ–ª–æ—á—ñ–≤", "–Ü—Ä—à–∞–≤–∞",
    "–ö–∞–ª—É—à", "–ö–∞–º'—è–Ω–µ—Ü—å-–ü–æ–¥—ñ–ª—å—Å—å–∫–∏–π", "–ö–∞—Ö–æ–≤–∫–∞", "–ö–æ–±–µ–ª—è–∫–∏", "–ö—Ä–∞—Å–Ω–æ–∞—Ä–º—ñ–π—Å—å–∫", "–ö—Ä–∞—Å–Ω–æ–∞—Ä–º—ñ–π—Å—å–∫", "–ö—Ä–∞—Å–∏–ª—ñ–≤",
    "–ö—Ä–∞—Å–Ω–æ–ø–µ—Ä–µ–∫–æ–ø—Å—å–∫", "–ö—Ä–æ–ª–µ–≤–µ—Ü—å", "–ö—É–ø'—è–Ω—Å—å–∫", "–ö—É—Ä–∞—Ö–æ–≤–µ", "–õ–∞–¥–∏–∂–∏–Ω", "–õ–∞–Ω—ñ–≤—Ü—ñ", "–õ–∏—Å—è–Ω–∫–∞", "–õ–æ–∑–æ–≤–∞", "–õ–æ—Ö–≤–∏—Ü—è",
    "–õ—É–±–Ω–∏", "–ú–∞—Ä–≥–∞–Ω–µ—Ü—å", "–ú–∏—Ä–≥–æ—Ä–æ–¥", "–ú—ñ—É—Å–∏–Ω—Å—å–∫", "–ú–æ–≥–∏–ª—ñ–≤-–ü–æ–¥—ñ–ª—å—Å—å–∫–∏–π", "–ú–æ–ª–æ—á–∞–Ω—Å—å–∫", "–ù–æ–≤–æ–≥—Ä–∞–¥-–í–æ–ª–∏–Ω—Å—å–∫–∏–π",
    "–ù–æ–≤–æ–≥—Ä–æ–¥—ñ–≤–∫–∞", "–ù–æ–≤–∏–π –ë—É–≥", "–ù–æ–≤–∏–π –†–æ–∑–¥—ñ–ª", "–ù–æ–≤–∏–π –°—Ç—Ä–∞—Ç–µ–≥—ñ—á–Ω–∏–π", "–ù–æ–≤–æ–º–∏—Ä–≥–æ—Ä–æ–¥", "–ù–æ–≤–æ–º–æ—Å–∫–æ–≤—Å—å–∫", "–ù–æ–≤–æ—Å–µ–ª–∏—Ü—è",
    "–ù–æ–≤–æ—Ç—Ä–æ—ó—Ü—å–∫–µ", "–û–±—É—Ö—ñ–≤", "–û—Å—Ç—Ä–æ–≥", "–û—á–∞–∫—ñ–≤", "–ü–∞–≤–ª—ñ–≤–∫–∞", "–ü–µ—Ä–≤–æ–º–∞–π—Å—å–∫", "–ü–µ—Ä–µ—è—Å–ª–∞–≤-–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π", "–ü–µ—Ä—à–æ—Ç—Ä–∞–≤–µ–Ω—Å—å–∫",
    "–ü–µ—Ç—Ä–æ–≤–µ", "–ü—ñ–¥–≥–∞–π—Ü—ñ", "–ü—ñ—Å–æ—á–∏–Ω", "–ü–æ–¥—ñ–ª—å—Å—å–∫", "–ü–æ–∫—Ä–æ–≤", "–ü–æ–ª–æ–≥–∏", "–ü–æ–ø–∞—Å–Ω–∞", "–ü—Ä–∏–ª—É–∫–∏", "–ü—Ä–∏—é—Ç—ñ–≤–∫–∞", "–†–∞–¥–µ—Ö—ñ–≤",
    "–†–∞—Ö—ñ–≤", "–†–µ–Ω—ñ", "–†–∂–∏—â—ñ–≤", "–†–æ–∂–∏—â–µ", "–†–æ–º–Ω–∏", "–†—É–±—ñ–∂–Ω–µ", "–°–µ–ª–∏–¥–æ–≤–µ", "–°–µ–ª–∏—â–µ", "–°—ñ–≤–µ—Ä—Å—å–∫", "–°–∫–∞–¥–æ–≤—Å—å–∫", "–°–∫–≤–∏—Ä–∞",
    "–°–ª–∞–≤—É—Ç–∞", "–°–ª–∞–≤—É—Ç–∏—á", "–°–Ω—ñ–≥—É—Ä—ñ–≤–∫–∞", "–°–æ–ª–µ–¥–∞—Ä", "–°–æ–∫–∞–ª—å", "–°–æ–∫–∏—Ä—è–Ω–∏", "–°–æ–ª–æ–Ω–µ", "–°–æ—Å–Ω—ñ–≤–∫–∞", "–°—Ç–∞—Ä–æ–±—ñ–ª—å—Å—å–∫", "–°—Ç–∞—Ä–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤",
    "–°—Ç–∞—Ä—ã–π –°–∞–º–±—ñ—Ä", "–°—Ç–æ—Ä–æ–∂–∏–Ω–µ—Ü—å", "–°—Ç—Ä–∏–π", "–°—É–¥–∞–∫", "–°—É–¥–æ–≤–∞ –í–∏—à–Ω—è", "–°—É–º–∏", "–°—É—Ä–≥—É—Ç", "–°—É—Ç–∏—Å–∫–∏", "–¢–∞–≤—Ä—ñ–π—Å—å–∫", "–¢–∞–ª–∞–ª–∞—ó–≤–∫–∞",
    "–¢–∞–ª—å–Ω–µ", "–¢–∞—Ä–∞—Å—ñ–≤–∫–∞", "–¢–µ—Ä–Ω–æ–ø—ñ–ª—å", "–¢–µ—Ç—ñ—ó–≤", "–¢–æ–∫–º–∞–∫", "–¢–æ–º–∞–∫—ñ–≤–∫–∞", "–¢—Ä–æ—Å—Ç—è–Ω–µ—Ü—å", "–¢—Ä—É—Å–∫–∞–≤–µ—Ü—å", "–¢—É–ª—å—á–∏–Ω", "–¢—É—Ä—ñ–π—Å—å–∫",
    "–¢—É—Ä–∏—è", "–¢—è—á—ñ–≤", "–£–∂–≥–æ—Ä–æ–¥", "–£–º–∞–Ω—å", "–£—Å—Ç–∏–Ω—ñ–≤–∫–∞", "–§–∞—Å—Ç—ñ–≤", "–§–µ–æ–¥–æ—Å—ñ—è", "–•–∞—Ä–∫—ñ–≤", "–•–µ—Ä—Å–æ–Ω", "–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π", "–•–æ—Ä–æ—Å—Ç–∫—ñ–≤",
    "–•–æ—Ç–∏–Ω", "–•—Ä–∏—Å—Ç–∏–Ω—ñ–≤–∫–∞", "–•—É—Å—Ç", "–•—É—Ç–æ—Ä–∏", "–¶—é—Ä—É–ø–∏–Ω—Å—å–∫", "–ß–µ—Ä–≤–æ–Ω–æ–≥—Ä–∞–¥", "–ß–µ—Ä–Ω—ñ–≤—Ü—ñ", "–ß–µ—Ä–Ω—ñ–≥—ñ–≤", "–ß–∏–≥–∏—Ä–∏–Ω", "–ß–æ–ø", "–ß–æ—Ä–Ω–æ–±–∞–π",
    "–ß—É–≥—É—ó–≤", "–ß—É–¥–Ω—ñ–≤", "–®–∞—Ü—å–∫", "–®–∞—Ö—Ç–∞—Ä—Å—å–∫", "–®–µ–ø–µ—Ç—ñ–≤–∫–∞", "–®–æ—Å—Ç–∫–∞", "–®–ø–æ–ª–∞", "–©–∞—Å–ª–∏–≤–µ", "–©–∏—Ä–µ—Ü—å", "–Æ–∂–Ω–µ", "–Æ–∂–Ω–æ—É–∫—Ä–∞—ó–Ω—Å—å–∫", "–Æ–∂–Ω–µ",
    "–Æ—Ä'—ó–≤–∫–∞", "–Ø–≥–æ—Ç–∏–Ω", "–Ø–ª—Ç–∞", "–Ø–º–ø—ñ–ª—å", "–Ø—Ä–µ–º—á–µ", "–Ø—Å–∏–Ω—É–≤–∞—Ç–∞"
]



@dp.message_handler(commands='start')
async def send_answer(message: types.Message):
    await message.answer('–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞')


@dp.message_handler(lambda message: message.text and not message.text.startswith('/'))
async def get_weather(message: types.Message):
    city = message.text
    if city in ukrainian_cities:
        collectData(city.replace(" ", "-"))
        with open("weather_data.json") as file:
            data = json.load(file)
            card = (
                f"<b>{data[0].get('current_time')}:</b> <i>{data[0].get('current_temp')}</i>\n"
                f"–ü–æ–≥–æ–¥–∞ –≤ –º—ñ—Å—Ç—ñ <b>{city}</b> –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å:\n\n"
            )
            for day in data:
                if day.get('weather_description') == "–ù–µ–≤–µ–ª–∏–∫–∞ —Ö–º–∞—Ä–Ω—ñ—Å—Ç—å":
                    smile = "üå§"
                elif day.get('weather_description') == "–•–º–∞—Ä–Ω–æ, –¥–æ—â –∑—ñ —Å–Ω—ñ–≥–æ–º":
                    smile = "üå®"
                elif day.get('weather_description') == "–•–º–∞—Ä–Ω–æ, –º–æ–∫—Ä–∏–π —Å–Ω—ñ–≥":
                    smile = "üå®"
                elif day.get('weather_description') == "–•–º–∞—Ä–Ω–æ –∑ –ø—Ä–æ—è—Å–Ω–µ–Ω–Ω—è–º–∏, –Ω–µ–≤–µ–ª–∏–∫–∏–π –¥–æ—â":
                    smile = "üå¶"
                elif day.get('weather_description') == "–•–º–∞—Ä–Ω–æ":
                    smile = "‚òÅÔ∏è"
                elif day.get('weather_description') == "–ú—ñ–Ω–ª–∏–≤–∞ —Ö–º–∞—Ä–Ω—ñ—Å—Ç—å":
                    smile = "‚õÖÔ∏è"
                else:
                    smile = ""  # –î–æ–¥–∞–π—Ç–µ —Ü–µ–π —Ä—è–¥–æ–∫, —â–æ–± —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ smile, —è–∫—â–æ –∂–æ–¥–Ω–∞ –∑ —É–º–æ–≤ –Ω–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è.

                card += (
                    f"<b><u>üìÖ{day.get('day')}, {day.get('date')} {day.get('month')}:</u></b>\n"
                    f"{smile}<b>–ü–æ–≥–æ–¥–∞:</b> <i> {day.get('weather_description')}</i>\n"
                    f"üßä<b>–ú—ñ–Ω. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> <i>{day.get('min_temp')}</i>\n"
                    f"üå°<b>–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> <i>{day.get('max_temp')}</i>\n\n"
                )

            await message.answer(card)

    else:
        await message.answer("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –Ω–∞–∑–≤–∞ –º—ñ—Å—Ç–∞")

def main():
    executor.start_polling(dp)

if __name__ == "__main__":
    main()
